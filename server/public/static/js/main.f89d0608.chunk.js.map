{"version":3,"sources":["client.ts","ShoppingList.tsx","ListConfig.tsx","Menu.tsx","Navbar.tsx","AppPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BASE_API","process","postEvent","event","fetch","method","body","JSON","stringify","headers","getShoppingLists","then","res","json","postNewProduct","newProductName","newProductCategory","name","category","useStyles","makeStyles","theme","listItemChecked","background","palette","secondary","light","textDecoration","listItem","primary","list","overflow","maxHeight","ShoppingList","props","listItems","listId","setListId","useEffect","id","Box","p","align","display","component","Link","to","List","className","sort","a","b","toUpperCase","map","item","ListItem","onClick","checkListItem","payload","list_id","product_id","type","checked","handleClick","key","clsx","button","ListItemIcon","ListItemText","chipContainer","overflowX","Menu","products","useState","activeCategories","setCategories","categories","Array","from","Set","justifyContent","Chip","icon","label","color","includes","console","log","updatedCategories","filter","c","handleCategoryClick","clickable","product","length","selected","some","root","width","maxWidth","backgroundColor","paper","nested","paddingLeft","spacing","isDeleted","dark","classes","React","open","setOpen","dialogOpen","setDialogOpen","deleteOpen","setDeleteOpen","newProductOpen","handleNewProductOpen","newListTitle","setNewListTitle","listToDelete","selectListToDelete","setNewProductName","setNewProductCategory","handleDialogClose","handleDeleteClose","refetchShoppingLists","setShoppingLists","data","handleNewList","trim","handleListDelete","handleNewProduct","refetchProducts","aria-label","Collapse","in","timeout","unmountOnExit","disablePadding","shoppingLists","Divider","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","value","fullWidth","onChange","target","DialogActions","Button","Select","evt","MenuItem","menuButton","marginRight","title","flexGrow","Navbar","AppBar","position","Toolbar","IconButton","navigate","edge","Typography","variant","page","boxSizing","padding","paddingBottom","AppPage","path","createMuiTheme","main","typography","fontFamily","responsiveFontSizes","App","Map","listData","setListItems","listening","setListening","setProducts","eventSource","EventSource","onmessage","parsedData","parse","jsonResponse","Response","Object","entries","window","caches","cache","put","catch","e","onerror","error","match","jsonData","get","newProducts","String","product_name","i","ThemeProvider","newItems","updatedMap","set","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f89d0608.chunk.js","sourcesContent":["import { IApiProduct } from \"./interfaces\"\n\nconst BASE_API = process.env.REACT_APP_BASE_URL\n\nexport const postEvent = (event: any) => {\n    return fetch(`${BASE_API}/events`, {\n        method: 'POST',\n        body: JSON.stringify(event),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n}\n\nexport const createEventSource = () => new EventSource(`${BASE_API}/list-data`)\n\nexport const getShoppingLists = () => fetch(`${BASE_API}/lists`).then((res) => res.json())\n\nexport const getProducts = (): Promise<{ data: IApiProduct[] }> => fetch(`${BASE_API}/products`).then((res) => res.json())\n\nexport const postNewProduct = ({ newProductName , newProductCategory } : { newProductName: string, newProductCategory: string }) => fetch(`${BASE_API}/products`,\n    {\n        method: 'POST',\n        body : JSON.stringify({\n            name: newProductName,\n            category: newProductCategory\n        }),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })","import React, { useEffect } from 'react'\nimport Box from '@material-ui/core/Box'\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { IShoppingItem } from './interfaces'\nimport ListItem from '@material-ui/core/ListItem'\nimport MuiLink from '@material-ui/core/Link'\nimport List from '@material-ui/core/List'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport LocalCafeIcon from '@material-ui/icons/LocalCafe'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { postEvent } from './client'\n\ninterface ShoppingListProps extends RouteComponentProps {\n  listItems: IShoppingItem[];\n  listId: string;\n  id?: string\n  setListId: (id: string) => void\n  checkListItem: (id: string) => void\n}\n\nconst useStyles = makeStyles((theme) => {\n  return ({\n    listItemChecked: {\n      background: theme.palette.secondary.light!,\n      textDecoration: 'line-through'\n    },\n    listItem: {\n      \"&:hover, &.Mui-focusVisible\": { background: theme.palette.primary.light! }\n    },\n    list: {\n      overflow: 'auto',\n      maxHeight: 'calc(100vh - 140px)'\n    }\n  })\n});\n\nexport default function ShoppingList(props: ShoppingListProps) {\n  const { listItems, listId, setListId } = props\n  const { listItem, listItemChecked, list } = useStyles()\n\n  useEffect(() => {\n    //check if list id from route is the same as current list id,\n    //if not then change it to the currently selected\n    if (props.id && props.id !== listId) setListId(props.id)\n  }, [listId, setListId, props.id])\n\n  const handleClick = (item: IShoppingItem) => {\n    props.checkListItem(item.id)\n    const payload = {\n      list_id: props.listId,\n      product_id: item.id,\n      type: ''\n    }\n    if (item.checked) {\n      payload.type = 'item_unchecked'\n    } else {\n      payload.type = 'item_checked'\n    }\n    return postEvent(payload);\n  }\n\n  return (\n    <Box>\n      <Box p={2}>\n        <MuiLink align='center' display='block' component={Link} to='edit'>Bearbeiten</MuiLink>\n      </Box>\n      <List className={list}>\n        {\n          listItems.sort((a, b) => a.category.toUpperCase() > b.category.toUpperCase() ? 1 : -1).map((item) => {\n            return (\n              <ListItem onClick={() => handleClick(item)} key={item.id} className={clsx(listItem, item.checked ? listItemChecked : '')} button>\n                <ListItemIcon>\n                  <LocalCafeIcon />\n                </ListItemIcon>\n                <ListItemText primary={item.name} />\n              </ListItem>\n            )\n          })\n        }\n      </List>\n    </Box>\n  )\n}","import React, { useState } from 'react'\nimport Box from '@material-ui/core/Box'\nimport { RouteComponentProps, Link } from \"@reach/router\"\nimport { IShoppingItem, IProduct } from './interfaces'\nimport { postEvent } from './client'\nimport ListItem from '@material-ui/core/ListItem'\nimport MuiLink from '@material-ui/core/Link'\nimport List from '@material-ui/core/List'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport CheckIcon from '@material-ui/icons/Check'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport LocalCafeIcon from '@material-ui/icons/LocalCafe'\nimport Chip from '@material-ui/core/Chip'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\ninterface MenuProps extends RouteComponentProps {\n  listItems: IShoppingItem[],\n  listId: string,\n  products: IProduct[]\n}\n\nconst useStyles = makeStyles((theme) => {\n  return ({\n    listItemChecked: {\n      background: theme.palette.secondary.light!\n    },\n    listItem: {\n      \"&:hover, &.Mui-focusVisible\": { background: theme.palette.primary.light! }\n    },\n    chipContainer: {\n      overflowX: 'auto',\n    },\n    list: {\n      overflow: 'auto',\n      maxHeight: 'calc(100vh - 185px)'\n    }\n  })\n});\n\nexport default function Menu(props: MenuProps) {\n  const { listItems, products } = props\n  const { listItem, listItemChecked, chipContainer, list } = useStyles()\n  const [activeCategories, setCategories] = useState<string[]>([])\n\n  const handleClick = (product: IProduct) => {\n    const payload = {\n      list_id: props.listId,\n      product_id: product.id,\n      type: ''\n    }\n    if (product.selected) {\n      payload.type = 'item_removed'\n    } else {\n      payload.type = 'item_added'\n    }\n    return postEvent(payload);\n  }\n\n  const handleCategoryClick = (category: string) => {\n    console.log(category)\n    const updatedCategories = activeCategories.includes(category) ? activeCategories.filter(c => c !== category) : [...activeCategories, category]\n    console.log(updatedCategories)\n    return setCategories(updatedCategories)\n  }\n  const categories = Array.from(new Set(products.map(p => p.category)))\n\n  return (\n    <Box>\n      <Box p={2}>\n        <MuiLink align='center' display='block' component={Link} to={`/list/${props.listId}`}>Fertig</MuiLink>\n      </Box>\n      <Box p={1} display='flex' justifyContent='flex-start' className={chipContainer}>\n        {categories.map(category =>\n          <Chip key={category}\n            icon={<LocalCafeIcon />}\n            label={category}\n            color={activeCategories.includes(category) ? 'primary' : 'default'}\n            onClick={() => handleCategoryClick(category)}\n            clickable\n          />\n        )}\n      </Box>\n      <List className={list}>\n        {\n          products\n            .filter((product: IProduct) => activeCategories.length > 0 ? activeCategories.includes(product.category) : true)\n            .map((product: IProduct) => {\n              const selected = listItems.some(item => item.id === product.id)\n              return (\n                <ListItem onClick={() => handleClick(product)} className={clsx(listItem, selected ? listItemChecked : '')} key={product.id} button>\n                  <ListItemIcon>\n                    <LocalCafeIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={product.name} />{selected && <CheckIcon />}\n                </ListItem>\n              )\n            })\n        }\n      </List>\n    </Box>\n  )\n}\n\n","import React from 'react'\nimport Box from '@material-ui/core/Box'\nimport ListItem from '@material-ui/core/ListItem'\nimport List from '@material-ui/core/List'\nimport { RouteComponentProps } from \"@reach/router\"\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport AddIcon from '@material-ui/icons/Add'\nimport ListIcon from '@material-ui/icons/List'\nimport { ListItemText } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider'\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { IShoppingList } from './interfaces'\nimport { Link } from '@reach/router'\nimport { postEvent, getShoppingLists, postNewProduct } from './client'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  isDeleted: {\n    backgroundColor: theme.palette.secondary.dark,\n  }\n}));\n\ninterface MenuProps extends RouteComponentProps {\n  shoppingLists: IShoppingList[],\n  setShoppingLists : (lists: IShoppingList[]) => void\n  refetchProducts: () => void\n}\n\nexport default function Menu(props: MenuProps) {\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const [deleteOpen, setDeleteOpen] = React.useState(false);\n  const [newProductOpen, handleNewProductOpen] = React.useState(false) \n  const [newListTitle, setNewListTitle] = React.useState('')\n  const [listToDelete, selectListToDelete] = React.useState('')\n  const [newProductName, setNewProductName ] = React.useState('')\n  const [newProductCategory, setNewProductCategory ] = React.useState('')\n\n  const handleDialogOpen = () => setDialogOpen(true);\n  const handleDialogClose = () => setDialogOpen(false);\n  const handleDeleteOpen = () => setDeleteOpen(true);\n\n  const handleDeleteClose = () => {\n    setDeleteOpen(false);\n  };\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const refetchShoppingLists = () => {\n    console.log(\"refetch\")\n    getShoppingLists()\n    .then((res) =>  { console.log(res); props.setShoppingLists(res.data);})\n  }\n\n  const handleNewList = async () => {\n    handleDialogClose()\n    if (!newListTitle.trim()) return;\n    setNewListTitle('')\n    const payload = {\n      type: 'list_added',\n      name: newListTitle,\n    }\n    await postEvent(payload);\n    return refetchShoppingLists()\n  }\n\n  const handleListDelete = async () => {\n    handleDeleteClose()\n    if (!listToDelete.trim()) return;\n    selectListToDelete('')\n    const payload = {\n      type: 'list_removed',\n      list_id: listToDelete\n    }\n    refetchShoppingLists()\n    await postEvent(payload);\n    return refetchShoppingLists()\n  }\n\n  const handleNewProduct = async () => {\n    handleNewProductOpen(false)\n    if (!newProductName.trim()) return;\n    if (!newProductCategory.trim()) return;\n    setNewProductName('')\n    setNewProductCategory('')\n    await postNewProduct({ newProductName, newProductCategory })\n    return props.refetchProducts() \n  }\n\n  return (\n    <Box className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem button>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText onClick={handleDialogOpen} primary=\"Neuer Einkaufszettel\" />\n        </ListItem>\n        <ListItem button onClick={handleClick}>\n          <ListItemIcon>\n            <ListIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Einkaufslisten\" />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {\n              props.shoppingLists.map(list => {\n                return (\n                  <ListItem key={list.id} component={Link} to={`/list/${list.id}`} button className={classes.nested}>\n                    <ListItemIcon>\n                      <StarBorder />\n                    </ListItemIcon>\n                    <ListItemText primary={list.name} />\n                  </ListItem>\n                )\n              })\n            }\n          </List>\n        </Collapse>\n      </List>\n      <Divider />\n      <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n        <ListItem button>\n          <ListItemText onClick={handleDeleteOpen} primary=\"Löschen\" />\n        </ListItem>\n        <ListItem button>\n          <ListItemText onClick={() => handleNewProductOpen(true)} primary=\"Neues Produkt\" />\n        </ListItem>\n      </List>\n      <Dialog open={dialogOpen} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Neue Liste</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Bitte gib den Namen deiner Einkaufsliste ein.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            value={newListTitle}\n            label=\"Name\"\n            type=\"name\"\n            fullWidth\n            onChange={(event) => setNewListTitle(event.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose} color=\"primary\">\n            Zurück\n          </Button>\n          <Button onClick={handleNewList} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={deleteOpen} onClose={handleDeleteClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Liste löschen</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Welche Liste möchtest du löschen?\n          </DialogContentText>\n          <List>\n            {props.shoppingLists.map(list => {\n              const isDeleted = listToDelete === list.id\n              return (\n                <ListItem key={list.id} onClick={() => selectListToDelete(list.id)} button className={isDeleted ? classes.isDeleted : ''}>\n                  <ListItemIcon>\n                    <StarBorder />\n                  </ListItemIcon>\n                  <ListItemText primary={list.name} />\n                </ListItem>\n              )\n            })\n            }\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDeleteClose} color=\"primary\">\n            Zurück\n          </Button>\n          <Button onClick={handleListDelete} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={newProductOpen} onClose={handleNewProductOpen} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Neues Produkt</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Bitte gib den Namen des neuen Produkts ein.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            value={newProductName}\n            label=\"Name\"\n            type=\"name\"\n            fullWidth\n            onChange={(event) => setNewProductName(event.target.value)}\n          />\n          <DialogContentText>\n            Bitte gib die Kategorie des neuen Produkts an\n          </DialogContentText>\n          <Select \n            id='category'\n            value={newProductCategory}\n            onChange={(evt) =>\n              { \n                const category = evt.target.value as string\n                setNewProductCategory(category)\n            }}\n          >\n            <MenuItem value='TK'>TK</MenuItem>\n            <MenuItem value='Backwaren'>Backwaren</MenuItem>\n            <MenuItem value='Kühlwaren'>Kühlwaren</MenuItem>\n            <MenuItem value='Getränke'>Getränke</MenuItem>\n            <MenuItem value='Trockenware'>Trockenware</MenuItem>\n            <MenuItem value='Obst & Gemüse'>Obst & Gemüse</MenuItem>\n            <MenuItem value='Drogerie'>Drogerie</MenuItem>\n            <MenuItem value='Snacks'>Snacks</MenuItem>\n          </Select>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleNewProductOpen(false)} color=\"primary\">\n            Zurück\n          </Button>\n          <Button onClick={handleNewProduct} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Box from '@material-ui/core/Box'\nimport { navigate } from '@reach/router'\n\nconst useStyles = makeStyles((theme) => ({\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Navbar() {\n  const classes = useStyles()\n\n  return (\n    <Box flexGrow={1} >\n      <AppBar position=\"static\">\n        <Toolbar>\n             <IconButton onClick={() => navigate('/menu')} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" >\n              <MenuIcon />\n             </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Einkauf-App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </Box>\n      )\n} ","import React from 'react'\nimport { Router } from '@reach/router'\nimport ShoppingList from './ShoppingList'\nimport ListConfig from './ListConfig'\nimport Menu from './Menu'\nimport Navbar from './Navbar'\nimport { IShoppingItem, IShoppingList, IProduct } from './interfaces'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles } from '@material-ui/core'\n\ninterface AppPageProps {\n    listItems: IShoppingItem[],\n    products: IProduct[],\n    listId: string,\n    setListId: (id: string) => void,\n    shoppingLists: IShoppingList[],\n    checkListItem: (id: string) => void,\n    setShoppingLists : (lists: IShoppingList[]) => void\n    refetchProducts: () => void\n}\n\nconst useStyles = makeStyles(() => ({\n    page: {\n        boxSizing: 'border-box',\n        margin: '0',\n        padding: '0',\n        maxHeight: '100vh',\n        position: 'relative',\n        paddingBottom: '10vh'\n    }\n}))\n\nexport default function AppPage(props: AppPageProps) {\n    const { page } = useStyles()\n    return (\n        <Box className={page}>\n            <Navbar />\n            <Router >\n                <ShoppingList listId={props.listId} listItems={props.listItems} checkListItem={props.checkListItem} setListId={props.setListId} path=\"/list/:id\" />\n                <ListConfig products={props.products} listId={props.listId} listItems={props.listItems} path=\"/list/:id/edit\" />\n                <Menu shoppingLists={props.shoppingLists} path=\"/menu\" setShoppingLists={props.setShoppingLists} refetchProducts={props.refetchProducts} />\n            </Router>\n        </Box>\n    )\n}","import React from 'react';\nimport { useEffect, useState, useReducer } from 'react'\nimport { ThemeProvider, createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport AppPage from './AppPage'\nimport './App.css';\nimport { createEventSource, getShoppingLists, getProducts } from './client';\nimport { IShoppingItem, IShoppingList, IProduct } from './interfaces';\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#57DBBE',\n      light: '#80FFE3'\n    },\n    secondary: {\n      main: '#915540',\n      light: '#DF9379'\n    }\n  },\n  typography: {\n    fontFamily: \n      `\n      Roboto Mono,\n      Roboto,\n      sans-serif\n      `\n  }\n})\ntheme = responsiveFontSizes(theme)\n\n\nfunction App() {\n  const [listData, setListItems] = useState<Map<string,IShoppingItem[]>>(new Map());\n  const [listening, setListening] = useState(false);\n  const [listId, setListId ] = useState('1')\n  const [shoppingLists, setShoppingLists] = React.useState<IShoppingList[]>([])\n  const [products, setProducts] = useState<IProduct[]>([])\n  \n  useEffect(() => {\n    if (!listening) {\n      const eventSource = createEventSource() \n      eventSource.onmessage = async (event) => {\n        const parsedData = JSON.parse(event.data) as any\n        const jsonResponse = new Response(event.data, {\n          headers: {\n            'content-type': 'application/json'\n          }\n        })\n        const map = new Map(Object.entries(parsedData))\n        setListItems(map);\n        //update cache if we have access to it\n        if(window.caches) {\n          const cache = await window.caches.open('shoppinglist')\n          await cache.put(`/events/${listId}`, jsonResponse ).catch(e => console.log(e))\n        }\n      };\n      eventSource.onerror = async (error) => {\n        //use cache if we have access to it\n        if(window.caches) {\n          const data = await window.caches.match(`/events/${listId}`)\n          const jsonData = await data?.json()\n          const map = new Map(Object.entries(jsonData))\n          setListItems(map);\n        }\n      }\n      \n      setListening(true);\n    }\n  }, [listening, listData, listId]);\n\n  const listItems = listData.get(listId) || [] as IShoppingItem[]\n\n  useEffect(() => {\n    getShoppingLists()\n    .then((res) => setShoppingLists(res.data))\n  },[])\n\n  const refetchProducts = () => {\n    getProducts()\n    .then(res => {\n      const newProducts: IProduct[] = res.data\n      .map(product => {\n        return ({\n          id: String(product.id),\n          name: product.product_name,\n          category: product.category,\n          selected: listItems.some(i => i.id === `${product.id}`)\n        })\n      })\n      setProducts(newProducts)      \n    })\n  }\n\n  useEffect(() => {\n    refetchProducts()\n  },[])\n\n  const checkListItem = (id: string) => {\n    const newItems = listItems.map(item => item.id === id ? ({ ...item, checked: !item.checked }) : item)\n    const updatedMap = listData.set(listId,newItems) \n    setListItems(updatedMap)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <AppPage products={products} shoppingLists={shoppingLists} listId={listId} setListId={setListId} listItems={listItems} checkListItem={checkListItem} setShoppingLists={setShoppingLists} refetchProducts={refetchProducts}/>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}